"""Role & focus 1

Revision ID: b588680b9f75
Revises: 691f13d1880e
Create Date: 2018-03-12 10:44:03.040815

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "b588680b9f75"
down_revision = "16ab54432e2a"
branch_labels = None
depends_on = None


role_helper = sa.Table(
    "role",
    sa.MetaData(),
    sa.Column("role_id", sa.Integer(), nullable=False),
    sa.Column("circle_id", sa.Integer(), nullable=False),
    sa.Column("user_id", sa.Integer(), nullable=True),
    sa.Column("role_name", sa.String(), nullable=True),
    sa.Column("role_purpose", sa.String(), nullable=True),
    sa.Column("role_domain", sa.String(), nullable=True),
    sa.Column("role_accountabilities", sa.String(), nullable=True),
    sa.Column("is_active", sa.Boolean(), server_default="1", nullable=False),
)


def upgrade():
    connection = op.get_bind()

    tmp_role = op.create_table(
        "tmp_role",
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.Column("circle_id", sa.Integer(), nullable=False),
        sa.Column("role_name", sa.String(), nullable=True),
        sa.Column("role_purpose", sa.String(), nullable=True),
        sa.Column("role_domain", sa.String(), nullable=True),
        sa.Column("role_accountabilities", sa.String(), nullable=True),
        sa.Column(
            "is_active", sa.Boolean(), server_default="1", nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["circle_id"], ["circle.circle_id"], name="fk_role_circle"
        ),
        sa.PrimaryKeyConstraint("role_id"),
    )

    role_focus = op.create_table(
        "role_focus",
        sa.Column("role_focus_id", sa.Integer(), nullable=False),
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column(
            "focus_name", sa.String(), server_default="", nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["role_id"], ["tmp_role.role_id"], name="fk_focus_role"
        ),
        sa.PrimaryKeyConstraint("role_focus_id"),
    )

    for role in connection.execute(role_helper.select()):
        op.bulk_insert(
            tmp_role,
            [
                {
                    "role_id": role.role_id,
                    "circle_id": role.circle_id,
                    "role_name": role.role_name + " [TO UPDATE]",
                    "role_purpose": role.role_purpose,
                    "role_domain": role.role_domain,
                    "role_accountabilities": role.role_accountabilities,
                    "is_active": role.is_active,
                }
            ],
        )
        op.bulk_insert(
            role_focus,
            [
                {
                    "role_focus_id": role.role_id,
                    "role_id": role.role_id,
                    "user_id": role.user_id,
                    "focus_name": role.role_name + " [TO UPDATE]",
                }
            ],
        )


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("role_focus")
    op.drop_table("tmp_role")
    # ### end Alembic commands ###
